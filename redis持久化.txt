redis事务
set key value
set key1 value
multi
decrby	key1 100
incrby	key  200
如果执行语句的时候类型擦操作错误由程序员负责
失败执行discard
成功则执行exec

set key value
watch key    监控这个key值（可以跟多个key）
multi
decr key     减少value值1
exec 		 如果在watch监视的值改变了则exec不成功
unwatch		 取消所有监视的key


redis 频道发布与消息订阅
publish 频道  内容 	向频道推送一个内容 （成功会有返回值，几个订阅者）
subscribe 频道     收听频道的内容
psubscribe 频道（后面可以跟正则表达式）		


redis快照持久化rdb
rdbcompression yes     使用LZF压缩rdb文件,这会耗CPU, 但是可以减少磁盘占用.
save 900 1
save 300 10
save 60 10000 导出rdb的参数（条件），关闭则不生效
stop-writes-on-bgsave-error yes 导出遇到问题，则停止导出

测试rdb
可以使用./redis-benchmark -n 10000

redis日志持久化 aof
appendonly yes
# appendfsync always 每个命令都同步
appendfsync everysec 每秒钟写一次
# appendfsync no 	写入工作交给操作系统，判定缓冲区大小写入到aof，同步频率低速度快
no-appendfsync-on-rewrite yes 正在导出rdb的过程中要不要停止aof（不会丢弃，会存到缓存中）
auto-aof-rewrite-percentage 100 增长百分之百的时候会从写
auto-aof-rewrite-min-size 64mb	 满足大小最小为64mb的时候才会生效

redis主从复制原理

Redis全量复制一般发生在Slave初始化阶段，这时Slave需要将Master上的所有数据都复制一份。具体步骤如下： 
1）从服务器连接主服务器，发送SYNC命令； 
2）主服务器接收到SYNC命名后，开始执行BGSAVE命令生成RDB文件并使用缓冲区记录此后执行的所有写命令； 
3）主服务器BGSAVE执行完后，向所有从服务器发送快照文件，并在发送期间继续记录被执行的写命令； 
4）从服务器收到快照文件后丢弃所有旧数据，载入收到的快照； 
5）主服务器快照发送完毕后开始向从服务器发送缓冲区中的写命令； 
6）从服务器完成对快照的载入，开始接收命令请求，并执行来自主服务器缓冲区的写命令； 

